<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #65c990; /* Light gray background for the body */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-size: cover;
            background-position: center;
        }

        .container {
            background: rgba(255, 255, 255, 0.8); /* Semi-transparent white background for the container */
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Box shadow for subtle depth */
            width: 300px;
            border-radius: 5px;
            backdrop-filter: blur(10px); /* Apply backdrop filter for a frosted glass effect */
            transition: transform 0.3s ease, box-shadow 0.3s ease; /* Transition for transform and box-shadow */
        }

        .container:hover {
            transform: translateY(-5px); /* Lift container on hover */
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
        }

        h1 {
            text-align: center;
            color: #333;
        }

        input[type="text"] {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }

        button {
            width: 100%;
            padding: 10px;
            background: #5cb85c;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            transition: background 0.3s ease; /* Smooth background transition */
        }

        button:hover {
            background: #4cae4c;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background: #ffc0cb; /* Light pink background */
            padding: 10px;
            margin-bottom: 10px; /* Added margin for spacing */
            border-radius: 3px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background 0.3s ease; /* Smooth background transition */
        }

        li:hover {
            background: #ffe6ea; /* Lighter pink background on hover */
        }

        .completed {
            text-decoration: line-through;
            color: #777;
        }

        .editing input {
            width: calc(100% - 50px);
        }

        .editing button {
            margin-left: 5px;
        }

        .checkbox {
            margin-right: 10px;
        }

        .edit-btn {
            background-color: #3498db; /* Light blue background for Edit button */
        }

        .delete-btn {
            background-color: #e74c3c; /* Light red background for Delete button */
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <input type="text" id="taskInput" placeholder="Add a new task">
        <button onclick="addTask()">Add Task</button>
        <ul id="taskList"></ul>
    </div>
    <script>
        function addTask() {
            const taskInput = document.getElementById('taskInput');
            const taskText = taskInput.value.trim();
            if (taskText === '') return;

            const taskList = document.getElementById('taskList');

            const li = document.createElement('li');
            li.innerHTML = `
                <input type="checkbox" class="checkbox">
                <span>${taskText}</span>
                <div>
                    <button class="edit-btn" onclick="editTask(this)">Edit</button>
                    <button class="delete-btn" onclick="deleteTask(this)">Delete</button>
                </div>
            `;

            taskList.appendChild(li);
            taskInput.value = '';
        }

        function deleteTask(button) {
            const li = button.parentNode.parentNode;
            li.remove();
        }

        function editTask(button) {
            const li = button.parentNode.parentNode;
            if (li.classList.contains('editing')) {
                const input = li.querySelector('input[type="text"]');
                const taskText = input.value.trim();
                if (taskText === '') return;

                const span = li.querySelector('span');
                span.textContent = taskText;

                li.classList.remove('editing');
                button.textContent = 'Edit';
                button.classList.remove('edit-btn'); // Remove edit button style
                button.classList.add('edit-btn'); // Add back edit button style
            } else {
                const span = li.querySelector('span');
                const taskText = span.textContent;

                li.innerHTML = `
                    <input type="text" value="${taskText}">
                    <div>
                        <button class="edit-btn" onclick="editTask(this)">Save</button>
                        <button class="delete-btn" onclick="deleteTask(this)">Delete</button>
                    </div>
                `;

                li.classList.add('editing');
                li.querySelector('input').focus();
            }
        }
    </script>
</body>
</html>
